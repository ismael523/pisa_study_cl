pisa22 <- read_parquet("https://drive.google.com/uc?id=1yWPsHbSTE7vH7J3xnApCgdxKaw__3hWj&export=download")
pisa22 <- read_parquet("input/proc_data/STUQQQ.parquet")
pisa22rds <- readRDS("input/proc_data/STU_QQQ.rds")
pisa22rds2 <- readRDS("https://drive.google.com/uc?id=1pbGm2W-Mkg5ytBcA8TKZB_HhW35BnWZO__3hWj&export=download")
pisa22rds2 <- readRDS("https://drive.google.com/uc?id=1pbGm2W-Mkg5ytBcA8TKZB_HhW35BnWZO&export=download")
pisa22rds2 <- readRDS("https://drive.google.com/uc?id=1pbGm2W-Mkg5ytBcA8TKZB_HhW35BnWZO&export=download")
pisa22aa <- rio::import("https://drive.google.com/uc?id=1pbGm2W-Mkg5ytBcA8TKZB_HhW35BnWZO&export=download", format = "rds")
pisa22aa <- rio::import("https://drive.google.com/uc?id=1pbGm2W-Mkg5ytBcA8TKZB_HhW35BnWZO&export=download", format = "RDS")
View(pisa22)
datos_chile <- filter(pisa22, CNT == "CHL")
pacman::p_load(rio, dplyr, sjPlot, skimr, effects, psych)
pacman::p_load(rio, dplyr, sjPlot, skimr, effects, psych)
options(scipen = 999) #Desactivar notación científica
rm(list = ls())       #Limpieza enviroment
data <- read_parquet("https://drive.google.com/uc?id=1yWPsHbSTE7vH7J3xnApCgdxKaw__3hWj&export=download")
library(arrow)
data <- read_parquet("https://drive.google.com/uc?id=1yWPsHbSTE7vH7J3xnApCgdxKaw__3hWj&export=download")
pisa22 <- read_parquet("input/proc_data/STUQQQ.parquet")
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
pacman::p_load(rio, dplyr, sjPlot, skimr, effects, psych)
View(datos)
pisa22 <- read_parquet(":input/proc_data/STUQQQ.parquet")
library(arrow)
pisa22 <- read_parquet(":input/proc_data/STUQQQ.parquet")
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
pisa22 <- read_parquet(":input/proc_data/STUQQQ.parquet")
library(arrow)
pisa22 <- read_parquet("input/proc_data/STUQQQ.parquet")
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
# Remover la opción 5
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
pacman::p_load(rio, dplyr, sjPlot, skimr, effects, psych, haven)
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
pisa22$IC183Q02JA[pisa22$IC183Q02JA==5]<-NA
pisa22$IC183Q03JA[pisa22$IC183Q03JA==5]<-NA
pisa22$IC183Q04JA[pisa22$IC183Q04JA==5]<-NA
pisa22$IC183Q05JA[pisa22$IC183Q05JA==5]<-NA
pisa22$IC183Q07JA[pisa22$IC183Q07JA==5]<-NA
pisa22$IC183Q08JA[pisa22$IC183Q08JA==5]<-NA
pisa22$IC183Q09JA[pisa22$IC183Q09JA==5]<-NA
pisa22$IC183Q10JA[pisa22$IC183Q10JA==5]<-NA
pisa22$IC183Q12JA[pisa22$IC183Q12JA==5]<-NA
pisa22$IC183Q13JA[pisa22$IC183Q13JA==5]<-NA
pisa22$IC183Q14JA[pisa22$IC183Q14JA==5]<-NA
pisa22$IC183Q15JA[pisa22$IC183Q15JA==5]<-NA
pisa22$IC183Q16JA[pisa22$IC183Q16JA==5]<-NA
pisa22=pisa22 %>%
rowwise()%>%
mutate(effspec=mean(c(IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm=TRUE)) %>%
mutate(effgen=mean(c(IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm=TRUE)) %>%
mutate(sex=ST004D01T)
pisa22=pisa22 %>%
rowwise()%>%
mutate(effspec=mean(c(IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm=TRUE)) %>%
mutate(effgen=mean(c(IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm=TRUE)) %>%
mutate(sex=ST004D01T)
# Definir la función
multinivel_por_pais <- function(df) {
# Crear una lista vacía para almacenar los resultados
resultados <- list()
# Iterar por cada país
for (pais in unique(df$CNT)) {
# Filtrar los datos para cada país
data_pais <- df %>% filter(CNT == pais)
# Verificar si hay suficientes datos para ese país
if (nrow(data_pais) > 0) {
# Ajustar el modelo multinivel (nivel 1: individuo, nivel 2: escuela)
modelo <- lmer(effgen ~ factor(sex) + (1 | CNTSCHID), data = data_pais)
modelo2 <- lmer(effgen ~ factor(sex) + (sex | CNTSCHID), data = data_pais)
# Guardar los resultados del modelo en una lista
resultados[[pais]] <- list(
pais = pais,
modelo = modelo,
resumen = summary(modelo),
modelo2 = modelo2,
resumen2 = summary(modelo2)
)
}
}
# Devolver la lista de listas con los resultados
return(resultados)
}
pacman::p_load(arrow, dplyr, sjPlot, skimr, effects, psych, haven, lme4)
pacman::p_load(arrow, dplyr, sjPlot, skimr, effects, psych, haven, lme4)
options(scipen = 999) #Desactivar notación científica
rm(list = ls())       #Limpieza enviroment
library(arrow)
pisa22 <- read_parquet("input/proc_data/STUQQQ.parquet")
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
pisa22$IC183Q02JA[pisa22$IC183Q02JA==5]<-NA
pisa22$IC183Q03JA[pisa22$IC183Q03JA==5]<-NA
pisa22$IC183Q04JA[pisa22$IC183Q04JA==5]<-NA
pisa22$IC183Q05JA[pisa22$IC183Q05JA==5]<-NA
pisa22$IC183Q07JA[pisa22$IC183Q07JA==5]<-NA
pisa22$IC183Q08JA[pisa22$IC183Q08JA==5]<-NA
pisa22$IC183Q09JA[pisa22$IC183Q09JA==5]<-NA
pisa22$IC183Q10JA[pisa22$IC183Q10JA==5]<-NA
pisa22$IC183Q12JA[pisa22$IC183Q12JA==5]<-NA
pisa22$IC183Q13JA[pisa22$IC183Q13JA==5]<-NA
pisa22$IC183Q14JA[pisa22$IC183Q14JA==5]<-NA
pisa22$IC183Q15JA[pisa22$IC183Q15JA==5]<-NA
pisa22$IC183Q16JA[pisa22$IC183Q16JA==5]<-NA
pisa22=pisa22 %>%
rowwise()%>%
mutate(effspec=mean(c(IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm=TRUE)) %>%
mutate(effgen=mean(c(IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm=TRUE)) %>%
mutate(sex=ST004D01T)
# Definir la función
multinivel_por_pais <- function(df) {
# Crear una lista vacía para almacenar los resultados
resultados <- list()
# Iterar por cada país
for (pais in unique(df$CNT)) {
# Filtrar los datos para cada país
data_pais <- df %>% filter(CNT == pais)
# Verificar si hay suficientes datos para ese país
if (nrow(data_pais) > 0) {
# Ajustar el modelo multinivel (nivel 1: individuo, nivel 2: escuela)
modelo <- lmer(effgen ~ factor(sex) + (1 | CNTSCHID), data = data_pais)
modelo2 <- lmer(effgen ~ factor(sex) + (sex | CNTSCHID), data = data_pais)
# Guardar los resultados del modelo en una lista
resultados[[pais]] <- list(
pais = pais,
modelo = modelo,
resumen = summary(modelo),
modelo2 = modelo2,
resumen2 = summary(modelo2)
)
}
}
# Devolver la lista de listas con los resultados
return(resultados)
}
# Ejemplo de uso:
# Supongamos que tienes un data frame llamado 'cuestionario'
# resultados <- multinivel_por_pais(cuestionario)
View(multinivel_por_pais)
rm(list = ls())       #Limpieza enviroment
pisa22 <- readRDS("input/proc_data/STUQQQ.rds")
pisa22 <- readRDS("input/proc_data/STU_QQQ.rds")
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
pisa22$IC183Q02JA[pisa22$IC183Q02JA==5]<-NA
pisa22$IC183Q03JA[pisa22$IC183Q03JA==5]<-NA
pisa22$IC183Q04JA[pisa22$IC183Q04JA==5]<-NA
pisa22$IC183Q05JA[pisa22$IC183Q05JA==5]<-NA
pisa22$IC183Q07JA[pisa22$IC183Q07JA==5]<-NA
pisa22$IC183Q08JA[pisa22$IC183Q08JA==5]<-NA
pisa22$IC183Q09JA[pisa22$IC183Q09JA==5]<-NA
pisa22$IC183Q10JA[pisa22$IC183Q10JA==5]<-NA
pisa22$IC183Q12JA[pisa22$IC183Q12JA==5]<-NA
pisa22$IC183Q13JA[pisa22$IC183Q13JA==5]<-NA
pisa22$IC183Q14JA[pisa22$IC183Q14JA==5]<-NA
pisa22$IC183Q15JA[pisa22$IC183Q15JA==5]<-NA
pisa22$IC183Q16JA[pisa22$IC183Q16JA==5]<-NA
pisa22=pisa22 %>%
rowwise()%>%
mutate(effspec=mean(c(IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm=TRUE)) %>%
mutate(effgen=mean(c(IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm=TRUE)) %>%
mutate(sex=ST004D01T)
pacman::p_load(arrow, dplyr, sjPlot, skimr, effects, psych, haven, lme4)
pacman::p_load(arrow, dplyr, sjPlot, skimr, effects, psych, haven, lme4)
options(scipen = 999) #Desactivar notación científica
rm(list = ls())       #Limpieza enviroment
library(arrow)
# Análisis factorial y modelos lineales por país
```{r}
pacman::p_load(dplyr, haven)
options(scipen = 999)
rm(list = ls())
pisa22ict <- readRDS("input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS(":input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS(":input/proc_data/pisa22ict.rds")
pacman::p_load(dplyr, haven)
pacman::p_load(dplyr, haven)
options(scipen = 999)
rm(list = ls())
pisa22ict <- readRDS("::input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS(":input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS("input/proc_data/pisa22ict.rds")
getwd()
setwd("../Analisis")
pisa22ict <- readRDS("..input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS("..input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS(".input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS("...input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS("::input/proc_data/pisa22ict.rds")
pacman::p_load(dplyr, haven)
options(scipen = 999)
rm(list = ls())
pisa22ict <- readRDS(":input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS("input/proc_data/pisa22ict.rds")
pacman::p_load(dplyr, haven, psych, purr, tidyr, sjPlot)
pacman::p_load(dplyr, haven, psych, purr, tidyr, sjPlot)
options(scipen = 999)
rm(list = ls())
pisa22ict <- readRDS("input/proc_data/pisa22ict.rds")
View(pisa22ict)
pacman::p_load(rio, dplyr, sjPlot, skimr, effects, psych)
#| echo: false
pisa22= rio::import("https://www.dropbox.com/s/ld5v7rqpn333xsn/CY08MSP_STU_QQQ.SAV?dl=1")
pisa22= rio::import("https://www.dropbox.com/s/ld5v7rqpn333xsn/CY08MSP_STU_QQQ.SAV?dl=1")
pisa22$IC183Q01JA[pisa22$IC183Q01JA==5]<-NA
pisa22$IC183Q02JA[pisa22$IC183Q02JA==5]<-NA
pisa22$IC183Q03JA[pisa22$IC183Q03JA==5]<-NA
pisa22$IC183Q04JA[pisa22$IC183Q04JA==5]<-NA
pisa22$IC183Q05JA[pisa22$IC183Q05JA==5]<-NA
pisa22$IC183Q07JA[pisa22$IC183Q07JA==5]<-NA
pisa22$IC183Q08JA[pisa22$IC183Q08JA==5]<-NA
pisa22$IC183Q09JA[pisa22$IC183Q09JA==5]<-NA
pisa22$IC183Q10JA[pisa22$IC183Q10JA==5]<-NA
pisa22$IC183Q12JA[pisa22$IC183Q12JA==5]<-NA
pisa22$IC183Q13JA[pisa22$IC183Q13JA==5]<-NA
pisa22$IC183Q14JA[pisa22$IC183Q14JA==5]<-NA
pisa22$IC183Q15JA[pisa22$IC183Q15JA==5]<-NA
pisa22$IC183Q16JA[pisa22$IC183Q16JA==5]<-NA
## Generar indicadores relevantes
## effspec: Autoeficacia digital específica
## effgen: Autoeficacia digital general
## sex : Variable sexo (1=Female 2=Male)
pisa22=pisa22 %>%
rowwise()%>%
mutate(effspec=mean(c(IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm=TRUE)) %>%
mutate(effgen=mean(c(IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm=TRUE)) %>%
mutate(sex=ST004D01T)
View(pisa22ict)
skim(pisa22$effspec)
skim(pisa22$effgen)
skim(pisa22$effgen)
skim(pisa22$effspec)
skim(pisa22ict$effspec)
skim(pisa22$effgen)
skim(pisa22ict$effgen)
eff_data <- pisa22 %>%
select(CNT, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
eff_data <- pisa22ict %>%
select(CNT, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
resultados_fac_por_pais <- eff_data %>%
group_by(CNT) %>%
nest() %>%
mutate(
factor_analysis = map(data, ~ fa(r = .x[, -1], nfactors = 2, fm = "pa", rotate = "promax")),
factor_table = map(factor_analysis, ~ sjPlot::tab_fa(.x))
)
pacman::p_load(dplyr, haven, psych, purrr, tidyr, sjPlot)
resultados_fac_por_pais <- eff_data %>%
group_by(CNT) %>%
nest() %>%
mutate(
factor_analysis = map(data, ~ fa(r = .x[, -1], nfactors = 2, fm = "pa", rotate = "promax")),
factor_table = map(factor_analysis, ~ sjPlot::tab_fa(.x))
)
View(resultados_fac_por_pais)
# Seleccionar las columnas necesarias para el análisis
eff_data <- pisa22 %>%
select(CNT, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
# Seleccionar las columnas necesarias para el análisis
eff_data <- pisa22ict %>%
select(CNT, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
# Reemplazar la opción 5 (equivalente a "no sé") por NA
eff_data[eff_data == 5] <- NA
# Realizar análisis factorial solo en países con datos completos
resultados_fac_por_pais <- eff_data %>%
group_by(CNT) %>%
nest() %>%
mutate(
# Filtrar solo columnas numéricas
data_numeric = map(data, ~ .x %>% select(where(is.numeric))),
# Verificar si el conjunto tiene suficientes filas para el análisis
valid_data = map_lgl(data_numeric, ~ nrow(.x) > 2),
# Aplicar el análisis factorial solo si los datos son válidos
factor_analysis = map2(data_numeric, valid_data, ~ if (.y) fa(r = .x, nfactors = 2, fm = "pa", rotate = "promax") else NA),
factor_table = map2(factor_analysis, valid_data, ~ if (!is.na(.x)) sjPlot::tab_fa(.x) else NA)
)
eff_data <- pisa22ict %>%
select(CNT, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
fac <- eff_data %>%
group_by(CNT)
fac <- eff_data %>%
group_by(CNT) %>%
fa(r = eff, nfactors = 2, fm= "pa", rotate="promax")
fac <- eff_data %>%
group_by(CNT) %>%
fa(nfactors = 2, fm= "pa", rotate="promax")
View(pisa22ict)
pisa22ict <- as.numeric(pisa22ict$CNT)
View(pisa22)
#Filtrar países que hayan aplicado ICT y seleccionar variables de interes
pisa22_proc <- pisa22 %>%
filter(Option_ICTQ == 1) %>%
select(CNT, CNTRYID, CNTSCHID, CNTSTUID, ST001D01T, ST004D01T, starts_with("ST322"), ST337Q08JA, ST338Q08JA, starts_with("IC"))
#Elimiar respuesta no sabe
pisa22_proc$IC183Q01JA[pisa22_proc$IC183Q01JA==5]<-NA
pisa22_proc$IC183Q02JA[pisa22_proc$IC183Q02JA==5]<-NA
pisa22_proc$IC183Q03JA[pisa22_proc$IC183Q03JA==5]<-NA
pisa22_proc$IC183Q04JA[pisa22_proc$IC183Q04JA==5]<-NA
pisa22_proc$IC183Q05JA[pisa22_proc$IC183Q05JA==5]<-NA
pisa22_proc$IC183Q07JA[pisa22_proc$IC183Q07JA==5]<-NA
pisa22_proc$IC183Q08JA[pisa22_proc$IC183Q08JA==5]<-NA
pisa22_proc$IC183Q09JA[pisa22_proc$IC183Q09JA==5]<-NA
pisa22_proc$IC183Q10JA[pisa22_proc$IC183Q10JA==5]<-NA
pisa22_proc$IC183Q12JA[pisa22_proc$IC183Q12JA==5]<-NA
pisa22_proc$IC183Q13JA[pisa22_proc$IC183Q13JA==5]<-NA
pisa22_proc$IC183Q14JA[pisa22_proc$IC183Q14JA==5]<-NA
pisa22_proc$IC183Q15JA[pisa22_proc$IC183Q15JA==5]<-NA
pisa22_proc$IC183Q16JA[pisa22_proc$IC183Q16JA==5]<-NA
##Construcción del índice autoeficacia específica y general
pisa22_proc <- pisa22_proc %>%
mutate(
effspec = rowMeans(select(., IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE),
effgen = rowMeans(select(., IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm = TRUE),
sex = ST004D01T
)
pisa22 <- readRDS("input/proc_data/STU_QQQ.rds")
pisa22 <- readRDS("input/proc_data/STU_QQQ.rds")
#Filtrar países que hayan aplicado ICT y seleccionar variables de interes
pisa22_proc <- pisa22 %>%
filter(Option_ICTQ == 1) %>%
select(CNT, CNTRYID, CNTSCHID, CNTSTUID, ST001D01T, ST004D01T, starts_with("ST322"), ST337Q08JA, ST338Q08JA, starts_with("IC"))
#Filtrar países que hayan aplicado ICT y seleccionar variables de interes
pisa22_proc <- pisa22 %>%
filter(Option_ICTQ == 1) %>%
select(CNT, CNTRYID, CNTSCHID, CNTSTUID, ST001D01T, ST004D01T, starts_with("ST322"), ST337Q08JA, ST338Q08JA, starts_with("IC"))
#Elimiar respuesta no sabe
pisa22_proc$IC183Q01JA[pisa22_proc$IC183Q01JA==5]<-NA
pisa22_proc$IC183Q02JA[pisa22_proc$IC183Q02JA==5]<-NA
pisa22_proc$IC183Q03JA[pisa22_proc$IC183Q03JA==5]<-NA
pisa22_proc$IC183Q04JA[pisa22_proc$IC183Q04JA==5]<-NA
pisa22_proc$IC183Q05JA[pisa22_proc$IC183Q05JA==5]<-NA
pisa22_proc$IC183Q07JA[pisa22_proc$IC183Q07JA==5]<-NA
pisa22_proc$IC183Q08JA[pisa22_proc$IC183Q08JA==5]<-NA
pisa22_proc$IC183Q09JA[pisa22_proc$IC183Q09JA==5]<-NA
pisa22_proc$IC183Q10JA[pisa22_proc$IC183Q10JA==5]<-NA
pisa22_proc$IC183Q12JA[pisa22_proc$IC183Q12JA==5]<-NA
pisa22_proc$IC183Q13JA[pisa22_proc$IC183Q13JA==5]<-NA
pisa22_proc$IC183Q14JA[pisa22_proc$IC183Q14JA==5]<-NA
pisa22_proc$IC183Q15JA[pisa22_proc$IC183Q15JA==5]<-NA
pisa22_proc$IC183Q16JA[pisa22_proc$IC183Q16JA==5]<-NA
##Construcción del índice autoeficacia específica y general
pisa22_proc <- pisa22_proc %>%
mutate(
effspec = rowMeans(select(., IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE),
effgen = rowMeans(select(., IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm = TRUE),
sex = ST004D01T
)
##Construcción del índice autoeficacia específica y general
pisa22_proc <- pisa22_proc %>%
mutate(
effspec = rowMeans(select(., IC183Q10JA, IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE),
effgen = rowMeans(select(., IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q12JA, IC183Q13JA), na.rm = TRUE),
sex = ST004D01T
)
saveRDS(pisa22_proc, "input/proc_data/pisa22ict.rds")
pisa22ict <- readRDS("input/proc_data/pisa22ict.rds")
eff_data <- pisa22ict %>%
select(CNT, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
eff_data <- pisa22ict %>%
select(CNTRYID, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
fac <- eff_data %>%
group_by(CNTRYID) %>%
fa(nfactors = 2, fm= "pa", rotate="promax")
View(fac)
resultados_factoriales <- eff_data %>%
select(-CNTRYID) %>%
group_by(CNTRYID) %>%
group_split() %>%
map(~ fa(.x, nfactors = 2, fm = "pa", rotate = "promax"))
eff_data <- pisa22ict %>%
select(CNTRYID, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
resultados_factoriales <- eff_data %>%
select(-CNTRYID) %>%
group_by(CNTRYID) %>%
group_split() %>%
map(~ fa(.x, nfactors = 2, fm = "pa", rotate = "promax"))
resultados_factoriales <- eff_data %>%
select(-CNTRYID) %>%
group_by(eff_data$CNTRYID) %>%
group_split() %>%
map(~ fa(.x, nfactors = 2, fm = "pa", rotate = "promax"))
resultados_factoriales <- eff_data %>%
group_by(CNTRYID) %>%
select(-CNTRYID) %>%
group_split() %>%
map(~ fa(.x, nfactors = 2, fm = "pa", rotate = "promax"))
resultados_factoriales <- eff_data %>%
group_by(CNTRYID) %>%
group_split() %>%
map(~ fa(select(.x, -CNTRYID), nfactors = 2, fm = "pa", rotate = "promax"))
# Crear una tabla con los resultados del análisis factorial por país
tabla_resultados <- map2_dfr(
resultados_factoriales,
unique(eff_data$CNTRYID),
~ tibble(
CNTRYID = .y,
Variable = rownames(.x$loadings),
CargaFactor1 = .x$loadings[, 1],
CargaFactor2 = .x$loadings[, 2]
)
)
# Imprimimos la tabla de resultados
print(tabla_resultados)
pacman::p_load(dplyr, haven, psych, purr, tidyr, sjPlot)
pacman::p_load(dplyr, haven, psych, purr, tidyr, sjPlot)
options(scipen = 999)
rm(list = ls())
```{r}
pisa22ict <- readRDS("input/proc_data/pisa22ict.rds")
eff_data <- pisa22ict %>%
select(CNTRYID, IC183Q01JA, IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA,
IC183Q07JA, IC183Q08JA, IC183Q09JA, IC183Q10JA, IC183Q12JA,
IC183Q13JA, IC183Q14JA, IC183Q15JA, IC183Q16JA)
resultados_factoriales <- eff_data %>%
group_by(CNTRYID) %>%
group_split() %>%
map(~ fa(select(.x, -CNTRYID), nfactors = 2, fm = "pa", rotate = "promax"))
pacman::p_load(dplyr, haven, psych, purrr, tidyr, sjPlot)
resultados_factoriales <- eff_data %>%
group_by(CNTRYID) %>%
group_split() %>%
map(~ fa(select(.x, -CNTRYID), nfactors = 2, fm = "pa", rotate = "promax"))
View(resultados_factoriales)
# Crear una tabla con los resultados del análisis factorial por país
tabla_resultados <- map2_dfr(
resultados_factoriales,
unique(eff_data$CNTRYID),
~ tibble(
CNTRYID = .y,
Variable = rownames(.x$loadings),
CargaFactor1 = .x$loadings[, 1],
CargaFactor2 = .x$loadings[, 2]
)
)
# Imprimimos la tabla de resultados
print(tabla_resultados)
View(tabla_resultados)
View(pisa22ict)
View(pisa22ict)
print(tabla_resultados[[1]])
print(tabla_resultados[[1]])
sjPlot::tab_model(resultados_factoriales)
sjPlot::tab_model(resultados_factoriales[[1]])
df <- tibble(texto = unlist(resultados_factoriales), na.omit=FALSE)
View(df)
tabla_resultados <- map2_dfr(
resultados_factoriales[[1]],
unique(eff_data$CNTRYID),
~ tibble(
CNTRYID = .y,
Variable = rownames(.x$loadings),
CargaFactor1 = .x$loadings[, 1],
CargaFactor2 = .x$loadings[, 2]
)
)
modelo_effgen <- pisa22ict %>%
group_by(CNT) %>%
do(modelo = lm(effgen ~ sex, data = .))
modelo_effgen <- pisa22ict %>%
group_by(CNT) %>%
do(modelo = lm(effgen ~ sex, data = .))
modelo_effspec <- pisa22ict %>%
group_by(CNT) %>%
do(modelo = lm(effspec ~ sex, data = .))
# Extraer modelos individuales
models_effgen <- lapply(modelo_effgen$modelo, summary)
# Extraer modelos individuales
models_effgen <- lapply(modelo_effgen$modelo, summary)
models_effspec <- lapply(modelo_effspec$modelo, summary)
View(modelo_effgen)
View(modelo_effspec)
View(models_effgen)
View(modelo_effgen)
models_effgen[[1]]
models_effgen[[2]]
models_effspec[[1]]
models_effspec[[2]]
models_effspec[[3]]
models_effspec[[4]]
models_effspec[[5]]
modelo_effgen[[1]]
# Aquí se selecciona el factor 1 o 2, en este caso usaremos "CargaFactor1" como ejemplo
tabla_factor1 <- tabla_resultados %>%
select(CNTRYID, Variable, CargaFactor1) %>%
pivot_wider(names_from = CNTRYID, values_from = CargaFactor1)
View(tabla_factor1)
# Para el factor 2, simplemente repite el proceso con CargaFactor2
tabla_factor2 <- tabla_resultados %>%
select(CNTRYID, Variable, CargaFactor2) %>%
pivot_wider(names_from = CNTRYID, values_from = CargaFactor2)
View(tabla_factor2)
summary(pisa22ict$CNT)
levels(pica22ict$CNT)
levels(pisa22ict$CNT)
table(dataset$variable)
table(pisa22ict$CNT)
modelo_effgen[[1]]
models_effgen[[10]] #Modelo Albania
models_effspec[[10]]
